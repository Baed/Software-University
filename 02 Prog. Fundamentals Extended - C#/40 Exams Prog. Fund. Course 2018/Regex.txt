[0-9]+ matches non-empty sequence of digits
[A-Z][a-z]* matches a capital + small letters
\s+ matches whitespace (non-empty)
\S+ matches non-whitespace

[A-Z][a-z]+ [A-Z][a-z]+ - \w+@\w+\.\w+
Alex Georgiev - alex@mail.com

--Character Classes: Ranges--
[nvj] matches any character that is either n, v or j
[^abc] – matches any character that is not a, b or c
[0-9] – character range: matches any digit from 0 to 9

--Character Classes: Predefined--
\w – matches any word character (a-z, A-Z, 0-9, _)
\W – matches any non-word character (the opposite of \w)
\s – matches any white-space character
\S – matches any non-white-space character (opposite of \s)
\d – matches any decimal digit
\D – matches any non-decimal digit (opposite of \d)

--Quantifiers--
* – matches the previous element, zero or more times
+ – matches the previous element, one or more times
? – matches the previous element, zero or one time
{3} – matches the previous element exactly 3 times

--Character Escapes--
Sometimes we need to look for special characters like: 
new lines, tabs, dots, slashes, brackets, etc.
Use character escaping in the RegEx like this:

Name:	Peter
Phone: +359882042353
Name:\t\w+\nPhone:\s*\+\d+

--Anchors--
^ – the match must start at the beginning of the text or line
$ – the match must occur at the end of the text or line
Example – username validation pattern:
	jeff_butt
	short
	johnny
	too_long_username
    ^\w{6,12}$
Use multiline matching (/m flag) to match the end of line

--Grouping Constructs--
(subexpression) – captures the matched subexpression as numbered group
\d{2}-(\w{3})-\d{4}     22-Jan-2015

(?:subexpression) – defines a non-capturing group
^(?:Hi|hello),\s*(\w+)$        Hi, Peter

(?<name>subexpression) – defines a named capturing group
(?<day>\d{2})-(?<month>\w{3})-(?<year>\d{4})   22-Jan-2015

--Backreferences Match Previous Groups--
<(\w+)[^>]*>.*?<\/\1>

<b>Regular Expressions</b> are cool!
<p>I am a paragraph</p> … some text after
Hello, <div>I am a<code>DIV</code></div>!

--Non-capturing group--
(?:[^A-Za-z\d]+)

--Named capturing group--
(?<groupName>[a-zA-Z]+)

--
\1 matches the same text as most recently matched by the 1st capturing group
.+ matches any character (except for line terminators) one or unlimited
.* matches any character (except for line terminators) zero or unlimited


